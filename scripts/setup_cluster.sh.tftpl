#!/bin/bash

# Write ssh key in a temporary file (deleted later in the script)
filename="tmp_private_key.txt"
echo "${ssh_private_key}" > $${filename}
chmod -R 600 $${filename}

# Update the keyfile for authentication on all nodes if needed
%{ for node in nodes ~}
ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $${filename} root@${node.ipv4} <<-SSH
cd /opt/app
if ! grep -cx "${mongodb_secret_key}" auth/key; then
    echo "${mongodb_secret_key}" > auth/key
    docker-compose down
    docker-compose up -d
    sleep 10s
fi
SSH
%{ endfor ~}

# Force the reconfig of the cluster on the first node
ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $${filename} root@${nodes[0].ipv4} <<-SSH
cd /opt/app
docker exec -i mongo mongosh --host mongo:27017 -u admin -p "${software_password}" <<-MONGOSH
  use admin
  cfg = rs.config()
  cfg.members = [
%{ for index, node in nodes ~}
      {
        "_id": ${index},
        "host": "${node.ipv4}:17271",
        "priority": ${index == 0 ? 10 : 1}
      },
%{ endfor ~}
    ]
  rs.reconfig(cfg, { force: true })
MONGOSH
SSH

# Delete temporary ssh key file
rm $${filename}
