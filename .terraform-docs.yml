formatter: "" # this is required

version: ""

header-from: main.tf
footer-from: ""

recursive:
  enabled: false
  path: modules

sections:
  hide: []
  show: []

content: |-
  # Elestio MongoDB Cluster Terraform module

  Using this module, you can easily and quickly deploy a **MongoDB Cluster** on **Elestio** that is configured correctly and **ready to use**, without spending a lot of time on manual configuration.

  {{ .Header }}

  ## What it does ?

  1. Uses [official](https://hub.docker.com/_/mongo) MongoDB docker image.
  2. Creates `N` nodes.
  3. Makes sure nodes can talk to each other and create the cluster.
  4. Makes sure that new nodes always join the cluster.

  ## Usage

  There is a [ready-to-deploy example](https://github.com/elestio-examples/terraform-elestio-mongodb-cluster/tree/main/examples/get_started) included in the [examples](https://github.com/elestio-examples/terraform-elestio-mongodb-cluster/tree/main/examples) folder but simple usage is as follows:

  ```hcl
  {{ include "examples/doc/main.tf" }}
  ```

  ## Examples

  - [Get Started](https://github.com/elestio-examples/terraform-elestio-mongodb-cluster/tree/main/examples/get_started) - Ready-to-deploy example which creates MySQL Cluster on Elestio with Terraform in 5 minutes.

  ## Scale the cluster

  If 2 nodes are no longer enough after the first `terraform apply`, modify `nodes_count` to 4 in the configuration and run `terraform apply` again.
  This will add 2 more nodes to the cluster.

  You can also reduce the number of nodes, the excess ones will leave the cluster cleanly at the next `terraform apply`.

  ## How to use the cluster

  According to the [MongoDB documentation](https://www.mongodb.com/docs/drivers/node/current/fundamentals/connection/connect/#connect-to-a-replica-set), you can put several hosts in a connection string.</br>
  Example: `mongodb://user:password@host1:17271,host2:17271,host3:17271/?replicaSet=Cluster0`

  Use `terraform output cluster_database_admin` command to output your cluster connection string:

  ```bash
  # cluster_database_admin
  {
    "command" = "mongodb://admin:*****@91.107.194.15:17271,128.140.93.48:17271/?replicaSet=Cluster0"
    "hosts" = [
      "91.107.194.15",
      "128.140.93.48",
    ]
    "password" = "*****"
    "port" = "17271"
    "user" = "admin"
  }
  ```

  {{ .Footer }}
  {{ .Inputs }}
  {{ .Modules }}
  {{ .Outputs }}
  {{ .Providers }}
  {{ .Requirements }}
  {{ .Resources }}

output:
  file: ""
  mode: inject
  template: |-
    <!-- BEGIN_TF_DOCS -->
    {{ .Content }}
    <!-- END_TF_DOCS -->

output-values:
  enabled: false
  from: ""

sort:
  enabled: true
  by: name

settings:
  anchor: true
  color: true
  default: true
  description: false
  escape: true
  hide-empty: false
  html: true
  indent: 2
  lockfile: true
  read-comments: true
  required: true
  sensitive: true
  type: true
