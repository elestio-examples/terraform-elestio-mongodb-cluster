formatter: '' # this is required

version: ''

header-from: main.tf
footer-from: ''

recursive:
  enabled: false
  path: modules

sections:
  hide: []
  show: []

content: |-
  # Elestio MongoDB Cluster Terraform module

  Using this module, you can easily and quickly deploy with **Terraform** a **MongoDB Cluster** on **Elestio** that is configured correctly and **ready to use**, without spending a lot of time on manual configuration.

  {{ .Header }}
  ## Module requirements

  - The minimum number of nodes in a mongodb cluster is 3
  - 1 Elestio account https://dash.elest.io/signup
  - 1 API key https://dash.elest.io/account/security
  - 1 SSH public/private key (see how to create one [here](https://registry.terraform.io/providers/elestio/elestio/latest/docs/guides/ssh_keys))

  ## Usage

  This is a minimal example of how to use the module:

  ```hcl
  {{ include "examples/doc/usage.tf" }}
  ```

  Keep your mongodb password safe, you will need it to access the admin panel.

  If you want to know more about node configuration, check the mongodb service documentation [here](https://registry.terraform.io/providers/elestio/elestio/latest/docs/resources/mongodb).

  If you want to choose your own provider, datacenter or server type, check the guide [here](https://registry.terraform.io/providers/elestio/elestio/latest/docs/guides/providers_datacenters_server_types).

  If you want to generated a valid SSH Key, check the guide [here](https://registry.terraform.io/providers/elestio/elestio/latest/docs/guides/ssh_keys).

  If you add more nodes, you may attains the resources limit of your account, please visit your account [quota page](https://dash.elest.io/account/add-quota).

  ## Quick configuration

  The following example will create a MongoDB cluster with 3 nodes.

  You may need to adjust the configuration to fit your needs.

  Create a `main.tf` file at the root of your project, and fill it with your Elestio credentials:

  ```hcl
  {{ include "examples/doc/init.tf" }}
  ```

  Generate your MongoDB keyfile using the following command:

  ```bash
  openssl rand -base64 756 > keyfile
  ```

  Now you can use the module to create mongodb nodes:

  ```hcl
  {{ include "examples/doc/module.tf" }}
  ```

  To get a valid random mongodb password, you can use the url https://api.elest.io/api/auth/passwordgenerator

  ```bash
  $ curl -s https://api.elest.io/api/auth/passwordgenerator
  {"status":"OK","password":"7Tz1lCfD-Y8di-AyU2o467"}
  ```

  Finally, let's add some outputs to retrieve useful information:

  ```hcl
  {{ include "examples/doc/outputs.tf" }}
  ```

  You can now run `terraform init` and `terraform apply` to create your MongoDB cluster.
  After a few minutes, the cluster will be ready to use.
  You can access your outputs with `terraform output`:

  ```bash
  $ terraform output nodes_admins
  $ terraform output connection_string
  ```

  If you want to update some parameters, you can edit the `main.tf` file and run `terraform apply` again.
  Terraform will automatically update the cluster to match the new configuration.
  Please note that changing the node count requires to change the .env of existing nodes. This is done automatically by the module.

  ## Ready-to-deploy example

  We created a MongoDB ready-to-deploy cluster example which creates the same infrastructure as the previous example.
  You can find it [here](https://github.com/elestio-examples/terraform-elestio-mongodb-cluster/tree/main/examples/get_started).
  Follow the instructions to deploy the example.

  ## How to use the cluster

  According to the [MongoDB documentation](https://www.mongodb.com/docs/drivers/node/current/fundamentals/connection/connect/#connect-to-a-replica-set), you can put several hosts in a connection string.

  Example: `mongodb://user:password@host1:17271,host2:17271,host3:17271/?replicaSet=Cluster0`

  Use `terraform output connection_string` command to output database secrets:

  ```bash
  {{ include "examples/doc/readme_output.sh" }}
  ```
  {{ .Footer }}
  {{ .Inputs }}
  {{ .Modules }}
  {{ .Outputs }}
  {{ .Providers }}
  {{ .Requirements }}
  {{ .Resources }}

output:
  file: ''
  mode: inject
  template: |-
    <!-- BEGIN_TF_DOCS -->
    {{ .Content }}
    <!-- END_TF_DOCS -->

output-values:
  enabled: false
  from: ''

sort:
  enabled: true
  by: name

settings:
  anchor: true
  color: true
  default: true
  description: false
  escape: true
  hide-empty: false
  html: true
  indent: 2
  lockfile: true
  read-comments: true
  required: true
  sensitive: true
  type: true
